{"version":3,"sources":["Components/Player.jsx","Components/Song.jsx","Components/LibrarySong.jsx","Components/Library.jsx","Components/Nav.jsx","data.js","App.jsx","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","dragHandler","songs","setCurrentSong","setSongs","checkIfIsPlaying","song","a","newSongs","map","_song","id","active","current","play","skipTrackHandler","skipType","indexOfCurrentSong","findIndex","songToGo","length","currentTime","duration","getTime","time","Math","floor","slice","useEffect","className","min","max","value","onChange","type","size","icon","faAngleLeft","onClick","faBackward","pause","faPause","faPlay","faForward","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","volumeHandler","volume","theme","setTheme","faVolumeUp","faVolumeMute","faAdjust","faMusic","chillHop","audio","color","uuidv4","App","useRef","useState","data","setVolume","document","documentElement","style","setProperty","e","target","onTimeUpdate","onLoadedMetadata","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2fc8d1c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n  faForward,\n  faBackward,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  dragHandler,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  const checkIfIsPlaying = async (song) => {\n    const newSongs = songs.map((_song) => {\n      if (_song.id === song.id) {\n        return {\n          ..._song,\n          active: true,\n        };\n      } else {\n        return {\n          ..._song,\n          active: false,\n        };\n      }\n    });\n\n    setSongs(newSongs);\n    // Check If Is Playing\n    if (isPlaying) {\n      await setCurrentSong(song);\n      audioRef.current.play();\n    } else {\n      await setCurrentSong(song);\n    }\n  };\n\n  const skipTrackHandler = (skipType) => {\n    const newSongs = [...songs];\n\n    const indexOfCurrentSong = newSongs.findIndex(\n      (_song) => currentSong.id === _song.id\n    );\n\n    if (skipType === \"skip-back\") {\n      const songToGo = songs[indexOfCurrentSong - 1];\n\n      if ((indexOfCurrentSong - 1) % songs.length === -1) {\n        checkIfIsPlaying(songs[songs.length - 1]);\n        return;\n      }\n      checkIfIsPlaying(songToGo);\n    } else if (skipType === \"skip-forward\") {\n      const songToGo = songs[(indexOfCurrentSong + 1) % newSongs.length];\n      checkIfIsPlaying(songToGo);\n    } else if (skipType === \"skip-first\") {\n      setSongInfo({ ...songInfo, currentTime: 0.0 });\n      audioRef.current.currentTime = 0;\n    } else if (skipType === \"skip-last\") {\n      setSongInfo({ ...songInfo, currentTime: songInfo.duration - 1 });\n      audioRef.current.currentTime = songInfo.duration - 1;\n    }\n  };\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  useEffect(() => {\n    if (\n      songInfo.currentTime !== null &&\n      songInfo.currentTime !== 0 &&\n      songInfo.currentTime >= songInfo.duration\n    ) {\n      // AUTO SKIP\n      skipTrackHandler(\"skip-forward\");\n    }\n  }, [songInfo.currentTime]);\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          min={0}\n          max={songInfo.duration}\n          value={songInfo.currentTime ? songInfo.currentTime : 0}\n          onChange={dragHandler}\n          type=\"range\"\n        />\n        <p>{getTime(songInfo.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          size=\"2x\"\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          onClick={() => skipTrackHandler(\"skip-back\")}\n        />\n        <FontAwesomeIcon\n          size=\"2x\"\n          className=\"skip-back\"\n          icon={faBackward}\n          onClick={() => skipTrackHandler(\"skip-first\")}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          size=\"2x\"\n          className=\"play\"\n          icon={!isPlaying ? faPlay : faPause}\n        />\n        <FontAwesomeIcon\n          size=\"2x\"\n          className=\"skip-back\"\n          icon={faForward}\n          onClick={() => skipTrackHandler(\"skip-last\")}\n        />\n        <FontAwesomeIcon\n          size=\"2x\"\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nconst Song = ({ currentSong, isPlaying }) => {\n  return (\n    <div className=\"song-container\">\n      <img\n        src={currentSong.cover}\n        className={`imgClass ${isPlaying ? \"rotateImage\" : \"\"}`}\n        alt={currentSong.name}\n      />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n    // Add Active State\n\n    const newSongs = songs.map((_song) => {\n      if (_song.id === song.id) {\n        return {\n          ..._song,\n          active: true,\n        };\n      } else {\n        return {\n          ..._song,\n          active: false,\n        };\n      }\n    });\n\n    setSongs(newSongs);\n    // Check If Is Playing\n    if (isPlaying) {\n      await setCurrentSong(song);\n      audioRef.current.play();\n    } else {\n      await setCurrentSong(song);\n    }\n  };\n\n  return (\n    <div onClick={songSelectHandler}>\n      <div className={`library-song ${song.active ? \"selected\" : null}`}>\n        <img src={song.cover} alt={song.name} />\n        <div className=\"song-description\">\n          <h3>{song.name}</h3>\n          <h4>{song.artist}</h4>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library  ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => {\n          return (\n            <LibrarySong\n              song={song}\n              key={song.id}\n              setCurrentSong={setCurrentSong}\n              songs={songs}\n              audioRef={audioRef}\n              isPlaying={isPlaying}\n              setSongs={setSongs}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMusic,\n  faVolumeUp,\n  faVolumeMute,\n  faAdjust,\n} from \"@fortawesome/free-solid-svg-icons\";\nconst Nav = ({\n  libraryStatus,\n  setLibraryStatus,\n  volumeHandler,\n  volume,\n  theme,\n  setTheme,\n}) => {\n  return (\n    <nav>\n      <h1>Player</h1>\n      <FontAwesomeIcon\n        icon={volume ? faVolumeUp : faVolumeMute}\n        onClick={volumeHandler}\n      />\n\n      <div className=\"checkTheme\">\n        <FontAwesomeIcon icon={faAdjust} onClick={() => setTheme(!theme)} />\n      </div>\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\n        Library <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //We Can Add More Here\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./styles/app.scss\";\n\n// COMPONENTS\nimport Player from \"./Components/Player\";\nimport Song from \"./Components/Song\";\nimport Library from \"./Components/Library\";\nimport Nav from \"./Components/Nav\";\n\n// DATA\nimport data from \"./data\";\n\nfunction App() {\n  const updateDurationHandler = (e) => {\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, duration: duration });\n  };\n\n  const timeUpdateHandler = (e) => {\n    const currentTime = e.target.currentTime;\n    setSongInfo({ ...songInfo, currentTime: currentTime });\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const volumeHandler = () => {\n    setVolume(!volume);\n\n    volume ? (audioRef.current.volume = 0) : (audioRef.current.volume = 1);\n  };\n\n  //Ref\n  const audioRef = useRef(null);\n\n  //State\n  const [theme, setTheme] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [volume, setVolume] = useState(true);\n\n  useEffect(() => {\n    if (!theme) {\n      document.documentElement.style.setProperty(\"--color-white\", \"#ffffff\");\n      document.documentElement.style.setProperty(\n        \"--color-dark\",\n        \"rgb(36, 36, 36)\"\n      );\n      document.documentElement.style.setProperty(\n        \"--color-shadow\",\n        \"rgb(75, 75, 75);\"\n      );\n      document.documentElement.style.setProperty(\"--color-shadow-none\", \"none\");\n      document.documentElement.style.setProperty(\n        \"--color-shadow-libary-none\",\n        \"rgb(202, 202, 202)\"\n      );\n      document.documentElement.style.setProperty(\n        \"--color-shadow-library\",\n        \"rgb(202, 202, 202)\"\n      );\n    } else {\n      document.documentElement.style.setProperty(\n        \"--color-white\",\n        \"rgb(36, 36, 36)\"\n      );\n      document.documentElement.style.setProperty(\"--color-dark\", \"#ffffff\");\n      document.documentElement.style.setProperty(\"--color-shadow\", \"none\");\n      document.documentElement.style.setProperty(\n        \"--color-shadow-none\",\n        \"rgb(75, 75, 75)\"\n      );\n      document.documentElement.style.setProperty(\n        \"--color-shadow-libary-none\",\n        \"rgb(202, 202, 202)\"\n      );\n      document.documentElement.style.setProperty(\n        \"--color-shadow-library\",\n        \"none\"\n      );\n    }\n  }, [theme]);\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n        volumeHandler={volumeHandler}\n        setTheme={setTheme}\n        theme={theme}\n        volume={volume}\n      />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        dragHandler={dragHandler}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        isPlaying={isPlaying}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={updateDurationHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}